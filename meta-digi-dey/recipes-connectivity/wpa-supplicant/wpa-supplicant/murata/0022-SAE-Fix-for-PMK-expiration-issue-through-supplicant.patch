From: Kurt Lee <kurt.lee@cypress.com>
Date: Mon, 14 Feb 2022 00:08:23 -0600
Subject: [PATCH] SAE: Fix for PMK expiration issue through supplicant
 (second)

Description : Sending Deauth from AP once PMK timeout occurs, So that
STA will initiate the Auth process.
Changes : 1) Added support to get the dot11RSNAConfigPMKLifetime conf
element in wpa_authenticator structure to pass to the lower API's
2) Sending deauth from the wpa_auth_pmksa_free_cb once PMK time out
occurs.
Tested: Confirmed once PMK timeout occurs AP is sending deauth and STA
starting AUTH frame.

Porting from project: hostap_upstream, branch: IOT_HOSTAP_BRANCH_1_201
ID: 587411dd with modified hostapd/config_file.c for configuration of
hostapd

Second part: changes to 'hostapd' directory.

Signed-off-by: Arturo Buzarra <arturo.buzarra@digi.com>
---
 hostapd/config_file.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/hostapd/config_file.c b/hostapd/config_file.c
index b14728d1b..386499323 100644
--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -3669,10 +3669,12 @@ static int hostapd_config_fill(struct hostapd_config *conf,
 #endif /* CONFIG_IEEE80211AX */
 	} else if (os_strcmp(buf, "max_listen_interval") == 0) {
 		bss->max_listen_interval = atoi(pos);
 	} else if (os_strcmp(buf, "disable_pmksa_caching") == 0) {
 		bss->disable_pmksa_caching = atoi(pos);
+	} else if (os_strcmp(buf, "dot11RSNAConfigPMKLifetime") == 0) {
+		bss->dot11RSNAConfigPMKLifetime = atoi(pos);
 	} else if (os_strcmp(buf, "okc") == 0) {
 		bss->okc = atoi(pos);
 #ifdef CONFIG_WPS
 	} else if (os_strcmp(buf, "wps_state") == 0) {
 		bss->wps_state = atoi(pos);
