#
# U-Boot bootscript for EMMC/SD images created by Yocto.
#

# Set SOC type to "8qxp" if not already defined by U-Boot
if test ! -n "${soc_type}"; then
	setenv soc_type "8qxp"
fi

#
# Set device tree filename depending on the board ID (if defined)
#
if test -n "${board_id}"; then
	setenv fdt_file ccimx${soc_type}-sbc-express-id${board_id}.dtb
else
	#
	# Set device tree filename depending on the hardware capabilities
	#
	if test -n "${module_ram}"; then
		setexpr module_has_wifi ${hwid_3} \& 1
		setexpr module_has_bt ${hwid_3} \& 2
		setexpr module_has_bt ${module_has_bt} / 2

		if test "${module_has_wifi}" = "1" &&
		   test "${module_has_bt}" = "1"; then
			setenv fdt_file ccimx${soc_type}-sbc-express-wb.dtb
		else
			setenv fdt_file ccimx${soc_type}-sbc-express.dtb
		fi
	else
		#
		# Set device tree filename depending on the hardware variant
		#
		if test "${module_variant}" = "0x01" ||
		   test "${module_variant}" = "0x02" ||
		   test "${module_variant}" = "0x04"; then
			setenv fdt_file ccimx${soc_type}-sbc-express-wb.dtb
		elif test "${module_variant}" = "0x03" ||
		     test "${module_variant}" = "0x05"; then
			setenv fdt_file ccimx${soc_type}-sbc-express.dtb
		else
			setenv fdt_file ccimx${soc_type}-sbc-express-wb.dtb
		fi
	fi
fi

# Get the UUID of the configured boot partition.
part uuid mmc ${mmcbootdev}:${mmcpart} bootpart
# Check the boot source.
if test "${bootpart}" = "${part1_uuid}"; then
	# We are booting from the eMMC using 'linux'.
	true
elif test "${bootpart}" = "${part2_uuid}"; then
	# We are booting from the eMMC using 'recovery'.
	setenv boot_initrd true
	setenv initrd_file uramdisk-recovery.img
else
	# We are booting from the SD card.
	setenv mmcroot /dev/mmcblk${mmcbootdev}p2
fi
dboot linux mmc ${mmcbootdev}:${mmcpart}
